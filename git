git status - is used to get the status of your file

git config -list = gives

commit - is a two step process

1. git add index.html- add is done before commit which add new or changes file in working directory

- to commit all file at same so to add all files we use = git add .

2. to commit = git commit -m "Some message"

3. shortcut to add and commit at once - git commit -am "message"

4. use git push origin main = to show the change in git hub account

init - used to create a new git repositpry

git remote add origin <-link->
git remote -v (to verify remote)
git branch (to check branch)
git branch -M main (to rename branch if default is set to - master)
git push origin main (to push your repository in main branch)

to set your branch defualt -= git push -u origin main

WorkFlow-

Github - code changes ->commit
Local Git(on vs code) - code change -> add(stage change) -> commit(commit change) ->push

Branch Command -

git checkout <-branch name-> (to navigate to the branch name)
git checkout -b <-new branch name-> (to create new branch)
git branch -d <-branch name-> (to delete any branch)
git push --set-upstream origin <-branch name-> (to add new branch on github)

Merging Code -

git diff <-branch name-> (to compare commits, branches, files & more)
git merge <-branch name-> (to merge 2 branches)
OR
Pull request on github- lets you tell others about changes you've pushed to a branch in a repository on Github

push command - local -> github
pull command - github -> local

Merge Conflicts -

An event that takes place when Git is unable to automatically resolve differences in code between two commitss.

Merge Conflicts -

An event that takes place when Git is unable to automatically resolve differences in code between two commits.

Fixing Mistakes-

git log - gives you all the previous commit result

Case 1: Staged changes
git reset<-file name->

Case 2: commited changes (for ine commit)
git reset HEAD~1

Case 3: commited changes (for many commits)
git reset <-commit hash-> //commit hash you can get from git log
git reset --hard <-commit hash-> //this delete all the staged changes from that commit

What is Forking?
A fork is a new repository that shares code and visibility setting with the original "upstream" repository
Fork is a rough copy
